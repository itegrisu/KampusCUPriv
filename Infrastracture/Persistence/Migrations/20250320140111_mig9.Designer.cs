// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(KampusCUContext))]
    [Migration("20250320140111_mig9")]
    partial class mig9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.ClubManagements.Club", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("GidCategoryFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GidManagerFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Gid");

                    b.HasIndex("GidCategoryFK");

                    b.HasIndex("GidManagerFK");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("Domain.Entities.ClubManagements.StudentClub", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<Guid>("GidClubFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GidUserFK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Gid");

                    b.HasIndex("GidClubFK");

                    b.HasIndex("GidUserFK");

                    b.ToTable("StudentClubs");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.Announcement", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AnnouncementType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("GidAnnouncementType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GidClubFK")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Gid");

                    b.HasIndex("GidClubFK");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.Event", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EventStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("GidClubFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Gid");

                    b.HasIndex("GidClubFK");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.StudentAnnouncement", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<Guid>("GidAnnouncementFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GidUserFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.HasKey("Gid");

                    b.HasIndex("GidAnnouncementFK");

                    b.HasIndex("GidUserFK");

                    b.ToTable("StudenAnnouncements");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Category", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Gid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Class", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Gid");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Department", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Gid");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Domain.Entities.GeneralManagements.Admin", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("GidClubFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Gid");

                    b.HasIndex("GidClubFK");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Domain.Entities.GeneralManagements.User", b =>
                {
                    b.Property<Guid>("Gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataState")
                        .HasColumnType("int");

                    b.Property<string>("DeviceToken")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EmailVerificationCode")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime?>("EmailVerificationCodeExpire")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("GidClassFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GidDepartmentFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsBloodDonor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotificationsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Gid");

                    b.HasIndex("GidClassFK");

                    b.HasIndex("GidDepartmentFK");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.ClubManagements.Club", b =>
                {
                    b.HasOne("Domain.Entities.DefinitionManagements.Category", "CategoryFK")
                        .WithMany("Clubs")
                        .HasForeignKey("GidCategoryFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GeneralManagements.User", "UserFK")
                        .WithMany("Clubs")
                        .HasForeignKey("GidManagerFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CategoryFK");

                    b.Navigation("UserFK");
                });

            modelBuilder.Entity("Domain.Entities.ClubManagements.StudentClub", b =>
                {
                    b.HasOne("Domain.Entities.ClubManagements.Club", "ClubFK")
                        .WithMany("StudentClubs")
                        .HasForeignKey("GidClubFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GeneralManagements.User", "UserFK")
                        .WithMany("StudentClubs")
                        .HasForeignKey("GidUserFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClubFK");

                    b.Navigation("UserFK");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.Announcement", b =>
                {
                    b.HasOne("Domain.Entities.ClubManagements.Club", "ClubFK")
                        .WithMany("Announcements")
                        .HasForeignKey("GidClubFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClubFK");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.Event", b =>
                {
                    b.HasOne("Domain.Entities.ClubManagements.Club", "ClubFK")
                        .WithMany("Events")
                        .HasForeignKey("GidClubFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClubFK");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.StudentAnnouncement", b =>
                {
                    b.HasOne("Domain.Entities.CommunicationManagements.Announcement", "AnnouncementFK")
                        .WithMany("StudentAnnouncements")
                        .HasForeignKey("GidAnnouncementFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.GeneralManagements.User", "UserFK")
                        .WithMany("StudentAnnouncements")
                        .HasForeignKey("GidUserFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AnnouncementFK");

                    b.Navigation("UserFK");
                });

            modelBuilder.Entity("Domain.Entities.GeneralManagements.Admin", b =>
                {
                    b.HasOne("Domain.Entities.ClubManagements.Club", "ClubFK")
                        .WithMany("Admins")
                        .HasForeignKey("GidClubFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClubFK");
                });

            modelBuilder.Entity("Domain.Entities.GeneralManagements.User", b =>
                {
                    b.HasOne("Domain.Entities.DefinitionManagements.Class", "ClassFK")
                        .WithMany("Users")
                        .HasForeignKey("GidClassFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.DefinitionManagements.Department", "DepartmentFK")
                        .WithMany("Users")
                        .HasForeignKey("GidDepartmentFK")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClassFK");

                    b.Navigation("DepartmentFK");
                });

            modelBuilder.Entity("Domain.Entities.ClubManagements.Club", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("Announcements");

                    b.Navigation("Events");

                    b.Navigation("StudentClubs");
                });

            modelBuilder.Entity("Domain.Entities.CommunicationManagements.Announcement", b =>
                {
                    b.Navigation("StudentAnnouncements");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Category", b =>
                {
                    b.Navigation("Clubs");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Class", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.DefinitionManagements.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Entities.GeneralManagements.User", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("StudentAnnouncements");

                    b.Navigation("StudentClubs");
                });
#pragma warning restore 612, 618
        }
    }
}
