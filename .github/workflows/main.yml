name: CI/CD KampusCU

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.OS }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: nuget-${{ runner.OS }}-

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: dotnet restore KampusCU.sln

      - name: Build solution
        run: dotnet build KampusCU.sln --no-restore --configuration Release

      - name: Run tests
        run: dotnet test KampusCU.sln --no-build --configuration Release

  build-and-push:
    name: Build, Tag & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (full history)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set IMAGE_TAG
        run: |
          echo "IMAGE_TAG=v${{ github.run_number }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/kampuscu:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/kampuscu:latest

  deploy:
    name: Deploy to Server
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem

      - name: Deploy via SSH & Docker Compose
        run: |
          ssh -i ~/.ssh/deploy_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "cd /home/ubuntu/temiz-kampuscu && \
             git pull origin master && \          
             docker-compose down --volumes && \
             docker-compose pull && \            
             docker-compose up -d --force-recreate"
